---

- debug: msg="Importing Wordpress site '{{ site_name }}' using tarball '{{ wp_tarball }}' and database dump '{{ wp_dbdump }}'"

- name: install php modules required by wordpress
  apt: pkg={{ item }} state=installed
  with_items:
    - php5-mysql
    - php5-curl
    - php5-mcrypt
    - php5-gd

- name: install python-mysqldb for mysql_db module
  apt: pkg=python-mysqldb state=installed

- name: create web root
  file: path=/srv/{{ host_name }} state=directory

- name: get filename of existing database dump file
  set_fact: dbdump="{{ wp_dbdump | basename }}"

- name: upload existing database dump
  copy: src={{ wp_dbdump }} dest=/tmp/{{ dbdump }}

- name: create database
  mysql_db: name=wp_{{ site_name }} login_user=root login_password=pass1234 state=present
  register: db

- name: import database dump
  mysql_db: name=wp_{{ site_name }} login_user=root login_password=pass1234 state=import target=/tmp/{{ dbdump }}
  when: db.changed

- name: create mysql user and grant privs for db
  mysql_user: name=wp_{{ site_name }} login_user=root login_password=pass1234 priv=wp_{{ site_name }}.*:ALL password=pass1234_{{ site_name }}

- name: get filename of existing wordpress tarball
  set_fact: tarball="{{ wp_tarball | basename }}"

- name: upload tarball
  copy: src={{ wp_tarball }} dest=/tmp/{{ tarball }}

- name: extract tarball without container directory
  command: tar xzf /tmp/{{ tarball }} --strip 1 chdir=/srv/{{ host_name }} creates=index.php
    
- name: set ownership
  file: path=/srv/{{ host_name }} owner=www-data group=www-data recurse=yes

- name: set db name in wp config
  lineinfile: dest=/srv/{{ host_name }}/wp-config.php regexp='^define.*DB_NAME.*;' line="define('DB_NAME', 'wp_{{ site_name }}');"

- name: set db user in wp config
  lineinfile: dest=/srv/{{ host_name }}/wp-config.php regexp='^define.*DB_USER.*;' line="define('DB_USER', 'wp_{{ site_name }}');"

- name: set db password in wp config
  lineinfile: dest=/srv/{{ host_name }}/wp-config.php regexp='^define.*DB_PASSWORD.*;' line="define('DB_PASSWORD', 'pass1234_{{ site_name }}');"

- name: configure php-fpm pool
  template: src=php-fpm.conf dest=/etc/php5/fpm/pool.d/{{ host_name }}.conf
  notify: reload php-fpm

- name: configure nginx site
  template: src=nginx-site dest=/etc/nginx/sites-available/{{ host_name }}
  notify: reload nginx

- name: enable nginx site
  file: src=/etc/nginx/sites-available/{{ host_name }} dest=/etc/nginx/sites-enabled/{{ host_name }} state=link
  notify: reload nginx

